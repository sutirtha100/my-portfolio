{"ast":null,"code":"import { downloadSvgImage, loadGifImage, loadImage } from \"./Utils\";\nimport { ImageDrawer } from \"./ImageDrawer\";\nimport { ImagePreloaderPlugin } from \"./ImagePreloader\";\nimport { errorPrefix } from \"tsparticles-engine\";\nfunction addLoadImageToEngine(engine) {\n  if (engine.loadImage) {\n    return;\n  }\n  engine.loadImage = async data => {\n    if (!data.name && !data.src) {\n      throw new Error(\"\".concat(errorPrefix, \" no image source provided\"));\n    }\n    if (!engine.images) {\n      engine.images = [];\n    }\n    if (engine.images.find(t => t.name === data.name || t.source === data.src)) {\n      return;\n    }\n    try {\n      var _data$gif, _data$name;\n      const image = {\n        gif: (_data$gif = data.gif) !== null && _data$gif !== void 0 ? _data$gif : false,\n        name: (_data$name = data.name) !== null && _data$name !== void 0 ? _data$name : data.src,\n        source: data.src,\n        type: data.src.substring(data.src.length - 3),\n        error: false,\n        loading: true,\n        replaceColor: data.replaceColor,\n        ratio: data.width && data.height ? data.width / data.height : undefined\n      };\n      engine.images.push(image);\n      const imageFunc = data.gif ? loadGifImage : data.replaceColor ? downloadSvgImage : loadImage;\n      await imageFunc(image);\n    } catch {\n      var _data$name2;\n      throw new Error(\"\".concat(errorPrefix, \" \").concat((_data$name2 = data.name) !== null && _data$name2 !== void 0 ? _data$name2 : data.src, \" not found\"));\n    }\n  };\n}\nexport async function loadImageShape(engine) {\n  let refresh = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  addLoadImageToEngine(engine);\n  const preloader = new ImagePreloaderPlugin(engine);\n  await engine.addPlugin(preloader, refresh);\n  await engine.addShape([\"image\", \"images\"], new ImageDrawer(engine), refresh);\n}","map":{"version":3,"names":["downloadSvgImage","loadGifImage","loadImage","ImageDrawer","ImagePreloaderPlugin","errorPrefix","addLoadImageToEngine","engine","data","name","src","Error","concat","images","find","t","source","_data$gif","_data$name","image","gif","type","substring","length","error","loading","replaceColor","ratio","width","height","undefined","push","imageFunc","_data$name2","loadImageShape","refresh","arguments","preloader","addPlugin","addShape"],"sources":["C:/Users/Sutirtha Choudhury/OneDrive/Desktop/Portfolio/my-port-folio/node_modules/tsparticles-shape-image/esm/index.js"],"sourcesContent":["import { downloadSvgImage, loadGifImage, loadImage } from \"./Utils\";\nimport { ImageDrawer } from \"./ImageDrawer\";\nimport { ImagePreloaderPlugin } from \"./ImagePreloader\";\nimport { errorPrefix } from \"tsparticles-engine\";\nfunction addLoadImageToEngine(engine) {\n    if (engine.loadImage) {\n        return;\n    }\n    engine.loadImage = async (data) => {\n        if (!data.name && !data.src) {\n            throw new Error(`${errorPrefix} no image source provided`);\n        }\n        if (!engine.images) {\n            engine.images = [];\n        }\n        if (engine.images.find((t) => t.name === data.name || t.source === data.src)) {\n            return;\n        }\n        try {\n            const image = {\n                gif: data.gif ?? false,\n                name: data.name ?? data.src,\n                source: data.src,\n                type: data.src.substring(data.src.length - 3),\n                error: false,\n                loading: true,\n                replaceColor: data.replaceColor,\n                ratio: data.width && data.height ? data.width / data.height : undefined,\n            };\n            engine.images.push(image);\n            const imageFunc = data.gif ? loadGifImage : data.replaceColor ? downloadSvgImage : loadImage;\n            await imageFunc(image);\n        }\n        catch {\n            throw new Error(`${errorPrefix} ${data.name ?? data.src} not found`);\n        }\n    };\n}\nexport async function loadImageShape(engine, refresh = true) {\n    addLoadImageToEngine(engine);\n    const preloader = new ImagePreloaderPlugin(engine);\n    await engine.addPlugin(preloader, refresh);\n    await engine.addShape([\"image\", \"images\"], new ImageDrawer(engine), refresh);\n}\n"],"mappings":"AAAA,SAASA,gBAAgB,EAAEC,YAAY,EAAEC,SAAS,QAAQ,SAAS;AACnE,SAASC,WAAW,QAAQ,eAAe;AAC3C,SAASC,oBAAoB,QAAQ,kBAAkB;AACvD,SAASC,WAAW,QAAQ,oBAAoB;AAChD,SAASC,oBAAoBA,CAACC,MAAM,EAAE;EAClC,IAAIA,MAAM,CAACL,SAAS,EAAE;IAClB;EACJ;EACAK,MAAM,CAACL,SAAS,GAAG,MAAOM,IAAI,IAAK;IAC/B,IAAI,CAACA,IAAI,CAACC,IAAI,IAAI,CAACD,IAAI,CAACE,GAAG,EAAE;MACzB,MAAM,IAAIC,KAAK,IAAAC,MAAA,CAAIP,WAAW,8BAA2B,CAAC;IAC9D;IACA,IAAI,CAACE,MAAM,CAACM,MAAM,EAAE;MAChBN,MAAM,CAACM,MAAM,GAAG,EAAE;IACtB;IACA,IAAIN,MAAM,CAACM,MAAM,CAACC,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACN,IAAI,KAAKD,IAAI,CAACC,IAAI,IAAIM,CAAC,CAACC,MAAM,KAAKR,IAAI,CAACE,GAAG,CAAC,EAAE;MAC1E;IACJ;IACA,IAAI;MAAA,IAAAO,SAAA,EAAAC,UAAA;MACA,MAAMC,KAAK,GAAG;QACVC,GAAG,GAAAH,SAAA,GAAET,IAAI,CAACY,GAAG,cAAAH,SAAA,cAAAA,SAAA,GAAI,KAAK;QACtBR,IAAI,GAAAS,UAAA,GAAEV,IAAI,CAACC,IAAI,cAAAS,UAAA,cAAAA,UAAA,GAAIV,IAAI,CAACE,GAAG;QAC3BM,MAAM,EAAER,IAAI,CAACE,GAAG;QAChBW,IAAI,EAAEb,IAAI,CAACE,GAAG,CAACY,SAAS,CAACd,IAAI,CAACE,GAAG,CAACa,MAAM,GAAG,CAAC,CAAC;QAC7CC,KAAK,EAAE,KAAK;QACZC,OAAO,EAAE,IAAI;QACbC,YAAY,EAAElB,IAAI,CAACkB,YAAY;QAC/BC,KAAK,EAAEnB,IAAI,CAACoB,KAAK,IAAIpB,IAAI,CAACqB,MAAM,GAAGrB,IAAI,CAACoB,KAAK,GAAGpB,IAAI,CAACqB,MAAM,GAAGC;MAClE,CAAC;MACDvB,MAAM,CAACM,MAAM,CAACkB,IAAI,CAACZ,KAAK,CAAC;MACzB,MAAMa,SAAS,GAAGxB,IAAI,CAACY,GAAG,GAAGnB,YAAY,GAAGO,IAAI,CAACkB,YAAY,GAAG1B,gBAAgB,GAAGE,SAAS;MAC5F,MAAM8B,SAAS,CAACb,KAAK,CAAC;IAC1B,CAAC,CACD,MAAM;MAAA,IAAAc,WAAA;MACF,MAAM,IAAItB,KAAK,IAAAC,MAAA,CAAIP,WAAW,OAAAO,MAAA,EAAAqB,WAAA,GAAIzB,IAAI,CAACC,IAAI,cAAAwB,WAAA,cAAAA,WAAA,GAAIzB,IAAI,CAACE,GAAG,eAAY,CAAC;IACxE;EACJ,CAAC;AACL;AACA,OAAO,eAAewB,cAAcA,CAAC3B,MAAM,EAAkB;EAAA,IAAhB4B,OAAO,GAAAC,SAAA,CAAAb,MAAA,QAAAa,SAAA,QAAAN,SAAA,GAAAM,SAAA,MAAG,IAAI;EACvD9B,oBAAoB,CAACC,MAAM,CAAC;EAC5B,MAAM8B,SAAS,GAAG,IAAIjC,oBAAoB,CAACG,MAAM,CAAC;EAClD,MAAMA,MAAM,CAAC+B,SAAS,CAACD,SAAS,EAAEF,OAAO,CAAC;EAC1C,MAAM5B,MAAM,CAACgC,QAAQ,CAAC,CAAC,OAAO,EAAE,QAAQ,CAAC,EAAE,IAAIpC,WAAW,CAACI,MAAM,CAAC,EAAE4B,OAAO,CAAC;AAChF"},"metadata":{},"sourceType":"module","externalDependencies":[]}