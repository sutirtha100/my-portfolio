{"ast":null,"code":"import { clamp } from \"tsparticles-engine\";\nfunction checkDestroy(particle, value, minValue, maxValue) {\n  switch (particle.options.size.animation.destroy) {\n    case \"max\":\n      if (value >= maxValue) {\n        particle.destroy();\n      }\n      break;\n    case \"min\":\n      if (value <= minValue) {\n        particle.destroy();\n      }\n      break;\n  }\n}\nexport function updateSize(particle, delta) {\n  var _data$maxLoops, _data$loops, _data$maxLoops2, _data$velocity, _data$decay, _data$delayTime, _data$delayTime2, _data$delayTime3, _data$delayTime4;\n  const data = particle.size;\n  if (particle.destroyed || !data || !data.enable || ((_data$maxLoops = data.maxLoops) !== null && _data$maxLoops !== void 0 ? _data$maxLoops : 0) > 0 && ((_data$loops = data.loops) !== null && _data$loops !== void 0 ? _data$loops : 0) > ((_data$maxLoops2 = data.maxLoops) !== null && _data$maxLoops2 !== void 0 ? _data$maxLoops2 : 0)) {\n    return;\n  }\n  const sizeVelocity = ((_data$velocity = data.velocity) !== null && _data$velocity !== void 0 ? _data$velocity : 0) * delta.factor,\n    minValue = data.min,\n    maxValue = data.max,\n    decay = (_data$decay = data.decay) !== null && _data$decay !== void 0 ? _data$decay : 1;\n  if (!data.time) {\n    data.time = 0;\n  }\n  if (((_data$delayTime = data.delayTime) !== null && _data$delayTime !== void 0 ? _data$delayTime : 0) > 0 && data.time < ((_data$delayTime2 = data.delayTime) !== null && _data$delayTime2 !== void 0 ? _data$delayTime2 : 0)) {\n    data.time += delta.value;\n  }\n  if (((_data$delayTime3 = data.delayTime) !== null && _data$delayTime3 !== void 0 ? _data$delayTime3 : 0) > 0 && data.time < ((_data$delayTime4 = data.delayTime) !== null && _data$delayTime4 !== void 0 ? _data$delayTime4 : 0)) {\n    return;\n  }\n  switch (data.status) {\n    case \"increasing\":\n      if (data.value >= maxValue) {\n        data.status = \"decreasing\";\n        if (!data.loops) {\n          data.loops = 0;\n        }\n        data.loops++;\n      } else {\n        data.value += sizeVelocity;\n      }\n      break;\n    case \"decreasing\":\n      if (data.value <= minValue) {\n        data.status = \"increasing\";\n        if (!data.loops) {\n          data.loops = 0;\n        }\n        data.loops++;\n      } else {\n        data.value -= sizeVelocity;\n      }\n  }\n  if (data.velocity && decay !== 1) {\n    data.velocity *= decay;\n  }\n  checkDestroy(particle, data.value, minValue, maxValue);\n  if (!particle.destroyed) {\n    data.value = clamp(data.value, minValue, maxValue);\n  }\n}","map":{"version":3,"names":["clamp","checkDestroy","particle","value","minValue","maxValue","options","size","animation","destroy","updateSize","delta","_data$maxLoops","_data$loops","_data$maxLoops2","_data$velocity","_data$decay","_data$delayTime","_data$delayTime2","_data$delayTime3","_data$delayTime4","data","destroyed","enable","maxLoops","loops","sizeVelocity","velocity","factor","min","max","decay","time","delayTime","status"],"sources":["C:/Users/Sutirtha Choudhury/OneDrive/Desktop/Portfolio/my-port-folio/node_modules/tsparticles-updater-size/esm/Utils.js"],"sourcesContent":["import { clamp } from \"tsparticles-engine\";\nfunction checkDestroy(particle, value, minValue, maxValue) {\n    switch (particle.options.size.animation.destroy) {\n        case \"max\":\n            if (value >= maxValue) {\n                particle.destroy();\n            }\n            break;\n        case \"min\":\n            if (value <= minValue) {\n                particle.destroy();\n            }\n            break;\n    }\n}\nexport function updateSize(particle, delta) {\n    const data = particle.size;\n    if (particle.destroyed ||\n        !data ||\n        !data.enable ||\n        ((data.maxLoops ?? 0) > 0 && (data.loops ?? 0) > (data.maxLoops ?? 0))) {\n        return;\n    }\n    const sizeVelocity = (data.velocity ?? 0) * delta.factor, minValue = data.min, maxValue = data.max, decay = data.decay ?? 1;\n    if (!data.time) {\n        data.time = 0;\n    }\n    if ((data.delayTime ?? 0) > 0 && data.time < (data.delayTime ?? 0)) {\n        data.time += delta.value;\n    }\n    if ((data.delayTime ?? 0) > 0 && data.time < (data.delayTime ?? 0)) {\n        return;\n    }\n    switch (data.status) {\n        case \"increasing\":\n            if (data.value >= maxValue) {\n                data.status = \"decreasing\";\n                if (!data.loops) {\n                    data.loops = 0;\n                }\n                data.loops++;\n            }\n            else {\n                data.value += sizeVelocity;\n            }\n            break;\n        case \"decreasing\":\n            if (data.value <= minValue) {\n                data.status = \"increasing\";\n                if (!data.loops) {\n                    data.loops = 0;\n                }\n                data.loops++;\n            }\n            else {\n                data.value -= sizeVelocity;\n            }\n    }\n    if (data.velocity && decay !== 1) {\n        data.velocity *= decay;\n    }\n    checkDestroy(particle, data.value, minValue, maxValue);\n    if (!particle.destroyed) {\n        data.value = clamp(data.value, minValue, maxValue);\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}