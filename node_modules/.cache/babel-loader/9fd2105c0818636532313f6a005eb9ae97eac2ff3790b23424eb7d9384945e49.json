{"ast":null,"code":"import { executeOnSingleOrMultiple, isArray, isInArray } from \"tsparticles-engine\";\nimport { Absorber } from \"./Options/Classes/Absorber\";\nimport { Absorbers } from \"./Absorbers\";\nclass AbsorbersPlugin {\n  constructor() {\n    this.id = \"absorbers\";\n  }\n  getPlugin(container) {\n    return new Absorbers(container);\n  }\n  loadOptions(options, source) {\n    var _source$interactivity, _source$interactivity2;\n    if (!this.needsPlugin(options) && !this.needsPlugin(source)) {\n      return;\n    }\n    if (source !== null && source !== void 0 && source.absorbers) {\n      options.absorbers = executeOnSingleOrMultiple(source.absorbers, absorber => {\n        const tmp = new Absorber();\n        tmp.load(absorber);\n        return tmp;\n      });\n    }\n    options.interactivity.modes.absorbers = executeOnSingleOrMultiple(source === null || source === void 0 ? void 0 : (_source$interactivity = source.interactivity) === null || _source$interactivity === void 0 ? void 0 : (_source$interactivity2 = _source$interactivity.modes) === null || _source$interactivity2 === void 0 ? void 0 : _source$interactivity2.absorbers, absorber => {\n      const tmp = new Absorber();\n      tmp.load(absorber);\n      return tmp;\n    });\n  }\n  needsPlugin(options) {\n    var _options$interactivit, _options$interactivit2, _options$interactivit3;\n    if (!options) {\n      return false;\n    }\n    const absorbers = options.absorbers;\n    if (isArray(absorbers)) {\n      return !!absorbers.length;\n    } else if (absorbers) {\n      return true;\n    } else if ((_options$interactivit = options.interactivity) !== null && _options$interactivit !== void 0 && (_options$interactivit2 = _options$interactivit.events) !== null && _options$interactivit2 !== void 0 && (_options$interactivit3 = _options$interactivit2.onClick) !== null && _options$interactivit3 !== void 0 && _options$interactivit3.mode && isInArray(\"absorber\", options.interactivity.events.onClick.mode)) {\n      return true;\n    }\n    return false;\n  }\n}\nexport async function loadAbsorbersPlugin(engine) {\n  let refresh = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  await engine.addPlugin(new AbsorbersPlugin(), refresh);\n}\nexport * from \"./AbsorberContainer\";\nexport * from \"./Enums/AbsorberClickMode\";","map":{"version":3,"names":["executeOnSingleOrMultiple","isArray","isInArray","Absorber","Absorbers","AbsorbersPlugin","constructor","id","getPlugin","container","loadOptions","options","source","_source$interactivity","_source$interactivity2","needsPlugin","absorbers","absorber","tmp","load","interactivity","modes","_options$interactivit","_options$interactivit2","_options$interactivit3","length","events","onClick","mode","loadAbsorbersPlugin","engine","refresh","arguments","undefined","addPlugin"],"sources":["C:/Users/Sutirtha Choudhury/OneDrive/Desktop/Portfolio/my-port-folio/node_modules/tsparticles-plugin-absorbers/esm/index.js"],"sourcesContent":["import { executeOnSingleOrMultiple, isArray, isInArray, } from \"tsparticles-engine\";\nimport { Absorber } from \"./Options/Classes/Absorber\";\nimport { Absorbers } from \"./Absorbers\";\nclass AbsorbersPlugin {\n    constructor() {\n        this.id = \"absorbers\";\n    }\n    getPlugin(container) {\n        return new Absorbers(container);\n    }\n    loadOptions(options, source) {\n        if (!this.needsPlugin(options) && !this.needsPlugin(source)) {\n            return;\n        }\n        if (source?.absorbers) {\n            options.absorbers = executeOnSingleOrMultiple(source.absorbers, (absorber) => {\n                const tmp = new Absorber();\n                tmp.load(absorber);\n                return tmp;\n            });\n        }\n        options.interactivity.modes.absorbers = executeOnSingleOrMultiple(source?.interactivity?.modes?.absorbers, (absorber) => {\n            const tmp = new Absorber();\n            tmp.load(absorber);\n            return tmp;\n        });\n    }\n    needsPlugin(options) {\n        if (!options) {\n            return false;\n        }\n        const absorbers = options.absorbers;\n        if (isArray(absorbers)) {\n            return !!absorbers.length;\n        }\n        else if (absorbers) {\n            return true;\n        }\n        else if (options.interactivity?.events?.onClick?.mode &&\n            isInArray(\"absorber\", options.interactivity.events.onClick.mode)) {\n            return true;\n        }\n        return false;\n    }\n}\nexport async function loadAbsorbersPlugin(engine, refresh = true) {\n    await engine.addPlugin(new AbsorbersPlugin(), refresh);\n}\nexport * from \"./AbsorberContainer\";\nexport * from \"./Enums/AbsorberClickMode\";\n"],"mappings":"AAAA,SAASA,yBAAyB,EAAEC,OAAO,EAAEC,SAAS,QAAS,oBAAoB;AACnF,SAASC,QAAQ,QAAQ,4BAA4B;AACrD,SAASC,SAAS,QAAQ,aAAa;AACvC,MAAMC,eAAe,CAAC;EAClBC,WAAWA,CAAA,EAAG;IACV,IAAI,CAACC,EAAE,GAAG,WAAW;EACzB;EACAC,SAASA,CAACC,SAAS,EAAE;IACjB,OAAO,IAAIL,SAAS,CAACK,SAAS,CAAC;EACnC;EACAC,WAAWA,CAACC,OAAO,EAAEC,MAAM,EAAE;IAAA,IAAAC,qBAAA,EAAAC,sBAAA;IACzB,IAAI,CAAC,IAAI,CAACC,WAAW,CAACJ,OAAO,CAAC,IAAI,CAAC,IAAI,CAACI,WAAW,CAACH,MAAM,CAAC,EAAE;MACzD;IACJ;IACA,IAAIA,MAAM,aAANA,MAAM,eAANA,MAAM,CAAEI,SAAS,EAAE;MACnBL,OAAO,CAACK,SAAS,GAAGhB,yBAAyB,CAACY,MAAM,CAACI,SAAS,EAAGC,QAAQ,IAAK;QAC1E,MAAMC,GAAG,GAAG,IAAIf,QAAQ,CAAC,CAAC;QAC1Be,GAAG,CAACC,IAAI,CAACF,QAAQ,CAAC;QAClB,OAAOC,GAAG;MACd,CAAC,CAAC;IACN;IACAP,OAAO,CAACS,aAAa,CAACC,KAAK,CAACL,SAAS,GAAGhB,yBAAyB,CAACY,MAAM,aAANA,MAAM,wBAAAC,qBAAA,GAAND,MAAM,CAAEQ,aAAa,cAAAP,qBAAA,wBAAAC,sBAAA,GAArBD,qBAAA,CAAuBQ,KAAK,cAAAP,sBAAA,uBAA5BA,sBAAA,CAA8BE,SAAS,EAAGC,QAAQ,IAAK;MACrH,MAAMC,GAAG,GAAG,IAAIf,QAAQ,CAAC,CAAC;MAC1Be,GAAG,CAACC,IAAI,CAACF,QAAQ,CAAC;MAClB,OAAOC,GAAG;IACd,CAAC,CAAC;EACN;EACAH,WAAWA,CAACJ,OAAO,EAAE;IAAA,IAAAW,qBAAA,EAAAC,sBAAA,EAAAC,sBAAA;IACjB,IAAI,CAACb,OAAO,EAAE;MACV,OAAO,KAAK;IAChB;IACA,MAAMK,SAAS,GAAGL,OAAO,CAACK,SAAS;IACnC,IAAIf,OAAO,CAACe,SAAS,CAAC,EAAE;MACpB,OAAO,CAAC,CAACA,SAAS,CAACS,MAAM;IAC7B,CAAC,MACI,IAAIT,SAAS,EAAE;MAChB,OAAO,IAAI;IACf,CAAC,MACI,IAAI,CAAAM,qBAAA,GAAAX,OAAO,CAACS,aAAa,cAAAE,qBAAA,gBAAAC,sBAAA,GAArBD,qBAAA,CAAuBI,MAAM,cAAAH,sBAAA,gBAAAC,sBAAA,GAA7BD,sBAAA,CAA+BI,OAAO,cAAAH,sBAAA,eAAtCA,sBAAA,CAAwCI,IAAI,IACjD1B,SAAS,CAAC,UAAU,EAAES,OAAO,CAACS,aAAa,CAACM,MAAM,CAACC,OAAO,CAACC,IAAI,CAAC,EAAE;MAClE,OAAO,IAAI;IACf;IACA,OAAO,KAAK;EAChB;AACJ;AACA,OAAO,eAAeC,mBAAmBA,CAACC,MAAM,EAAkB;EAAA,IAAhBC,OAAO,GAAAC,SAAA,CAAAP,MAAA,QAAAO,SAAA,QAAAC,SAAA,GAAAD,SAAA,MAAG,IAAI;EAC5D,MAAMF,MAAM,CAACI,SAAS,CAAC,IAAI7B,eAAe,CAAC,CAAC,EAAE0B,OAAO,CAAC;AAC1D;AACA,cAAc,qBAAqB;AACnC,cAAc,2BAA2B"},"metadata":{},"sourceType":"module","externalDependencies":[]}