{"ast":null,"code":"import { clamp } from \"tsparticles-engine\";\nfunction checkDestroy(particle, value, minValue, maxValue) {\n  switch (particle.options.opacity.animation.destroy) {\n    case \"max\":\n      if (value >= maxValue) {\n        particle.destroy();\n      }\n      break;\n    case \"min\":\n      if (value <= minValue) {\n        particle.destroy();\n      }\n      break;\n  }\n}\nexport function updateOpacity(particle, delta) {\n  var _data$maxLoops, _data$loops, _data$maxLoops2, _data$decay, _data$delayTime, _data$delayTime2, _data$delayTime3, _data$delayTime4;\n  const data = particle.opacity;\n  if (particle.destroyed || !(data !== null && data !== void 0 && data.enable) || ((_data$maxLoops = data.maxLoops) !== null && _data$maxLoops !== void 0 ? _data$maxLoops : 0) > 0 && ((_data$loops = data.loops) !== null && _data$loops !== void 0 ? _data$loops : 0) > ((_data$maxLoops2 = data.maxLoops) !== null && _data$maxLoops2 !== void 0 ? _data$maxLoops2 : 0)) {\n    return;\n  }\n  const minValue = data.min,\n    maxValue = data.max,\n    decay = (_data$decay = data.decay) !== null && _data$decay !== void 0 ? _data$decay : 1;\n  if (!data.time) {\n    data.time = 0;\n  }\n  if (((_data$delayTime = data.delayTime) !== null && _data$delayTime !== void 0 ? _data$delayTime : 0) > 0 && data.time < ((_data$delayTime2 = data.delayTime) !== null && _data$delayTime2 !== void 0 ? _data$delayTime2 : 0)) {\n    data.time += delta.value;\n  }\n  if (((_data$delayTime3 = data.delayTime) !== null && _data$delayTime3 !== void 0 ? _data$delayTime3 : 0) > 0 && data.time < ((_data$delayTime4 = data.delayTime) !== null && _data$delayTime4 !== void 0 ? _data$delayTime4 : 0)) {\n    return;\n  }\n  switch (data.status) {\n    case \"increasing\":\n      if (data.value >= maxValue) {\n        data.status = \"decreasing\";\n        if (!data.loops) {\n          data.loops = 0;\n        }\n        data.loops++;\n      } else {\n        var _data$velocity;\n        data.value += ((_data$velocity = data.velocity) !== null && _data$velocity !== void 0 ? _data$velocity : 0) * delta.factor;\n      }\n      break;\n    case \"decreasing\":\n      if (data.value <= minValue) {\n        data.status = \"increasing\";\n        if (!data.loops) {\n          data.loops = 0;\n        }\n        data.loops++;\n      } else {\n        var _data$velocity2;\n        data.value -= ((_data$velocity2 = data.velocity) !== null && _data$velocity2 !== void 0 ? _data$velocity2 : 0) * delta.factor;\n      }\n      break;\n  }\n  if (data.velocity && data.decay !== 1) {\n    data.velocity *= decay;\n  }\n  checkDestroy(particle, data.value, minValue, maxValue);\n  if (!particle.destroyed) {\n    data.value = clamp(data.value, minValue, maxValue);\n  }\n}","map":{"version":3,"names":["clamp","checkDestroy","particle","value","minValue","maxValue","options","opacity","animation","destroy","updateOpacity","delta","_data$maxLoops","_data$loops","_data$maxLoops2","_data$decay","_data$delayTime","_data$delayTime2","_data$delayTime3","_data$delayTime4","data","destroyed","enable","maxLoops","loops","min","max","decay","time","delayTime","status","_data$velocity","velocity","factor","_data$velocity2"],"sources":["C:/Users/Sutirtha Choudhury/OneDrive/Desktop/Portfolio/my-port-folio/node_modules/tsparticles-updater-opacity/esm/Utils.js"],"sourcesContent":["import { clamp } from \"tsparticles-engine\";\nfunction checkDestroy(particle, value, minValue, maxValue) {\n    switch (particle.options.opacity.animation.destroy) {\n        case \"max\":\n            if (value >= maxValue) {\n                particle.destroy();\n            }\n            break;\n        case \"min\":\n            if (value <= minValue) {\n                particle.destroy();\n            }\n            break;\n    }\n}\nexport function updateOpacity(particle, delta) {\n    const data = particle.opacity;\n    if (particle.destroyed || !data?.enable || ((data.maxLoops ?? 0) > 0 && (data.loops ?? 0) > (data.maxLoops ?? 0))) {\n        return;\n    }\n    const minValue = data.min, maxValue = data.max, decay = data.decay ?? 1;\n    if (!data.time) {\n        data.time = 0;\n    }\n    if ((data.delayTime ?? 0) > 0 && data.time < (data.delayTime ?? 0)) {\n        data.time += delta.value;\n    }\n    if ((data.delayTime ?? 0) > 0 && data.time < (data.delayTime ?? 0)) {\n        return;\n    }\n    switch (data.status) {\n        case \"increasing\":\n            if (data.value >= maxValue) {\n                data.status = \"decreasing\";\n                if (!data.loops) {\n                    data.loops = 0;\n                }\n                data.loops++;\n            }\n            else {\n                data.value += (data.velocity ?? 0) * delta.factor;\n            }\n            break;\n        case \"decreasing\":\n            if (data.value <= minValue) {\n                data.status = \"increasing\";\n                if (!data.loops) {\n                    data.loops = 0;\n                }\n                data.loops++;\n            }\n            else {\n                data.value -= (data.velocity ?? 0) * delta.factor;\n            }\n            break;\n    }\n    if (data.velocity && data.decay !== 1) {\n        data.velocity *= decay;\n    }\n    checkDestroy(particle, data.value, minValue, maxValue);\n    if (!particle.destroyed) {\n        data.value = clamp(data.value, minValue, maxValue);\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}