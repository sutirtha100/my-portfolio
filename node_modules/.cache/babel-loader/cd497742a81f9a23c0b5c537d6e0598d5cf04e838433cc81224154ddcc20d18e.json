{"ast":null,"code":"import { getRangeValue } from \"tsparticles-engine\";\nexport class StarDrawer {\n  draw(context, particle, radius) {\n    var _particle$starInset;\n    const sides = particle.sides,\n      inset = (_particle$starInset = particle.starInset) !== null && _particle$starInset !== void 0 ? _particle$starInset : 2;\n    context.moveTo(0, 0 - radius);\n    for (let i = 0; i < sides; i++) {\n      context.rotate(Math.PI / sides);\n      context.lineTo(0, 0 - radius * inset);\n      context.rotate(Math.PI / sides);\n      context.lineTo(0, 0 - radius);\n    }\n  }\n  getSidesCount(particle) {\n    var _ref, _star$sides;\n    const star = particle.shapeData;\n    return Math.round(getRangeValue((_ref = (_star$sides = star === null || star === void 0 ? void 0 : star.sides) !== null && _star$sides !== void 0 ? _star$sides : star === null || star === void 0 ? void 0 : star.nb_sides) !== null && _ref !== void 0 ? _ref : 5));\n  }\n  particleInit(container, particle) {\n    var _star$inset;\n    const star = particle.shapeData,\n      inset = getRangeValue((_star$inset = star === null || star === void 0 ? void 0 : star.inset) !== null && _star$inset !== void 0 ? _star$inset : 2);\n    particle.starInset = inset;\n  }\n}","map":{"version":3,"names":["getRangeValue","StarDrawer","draw","context","particle","radius","_particle$starInset","sides","inset","starInset","moveTo","i","rotate","Math","PI","lineTo","getSidesCount","_ref","_star$sides","star","shapeData","round","nb_sides","particleInit","container","_star$inset"],"sources":["C:/Users/Sutirtha Choudhury/OneDrive/Desktop/Portfolio/my-port-folio/node_modules/tsparticles-shape-star/esm/StarDrawer.js"],"sourcesContent":["import { getRangeValue } from \"tsparticles-engine\";\nexport class StarDrawer {\n    draw(context, particle, radius) {\n        const sides = particle.sides, inset = particle.starInset ?? 2;\n        context.moveTo(0, 0 - radius);\n        for (let i = 0; i < sides; i++) {\n            context.rotate(Math.PI / sides);\n            context.lineTo(0, 0 - radius * inset);\n            context.rotate(Math.PI / sides);\n            context.lineTo(0, 0 - radius);\n        }\n    }\n    getSidesCount(particle) {\n        const star = particle.shapeData;\n        return Math.round(getRangeValue(star?.sides ?? star?.nb_sides ?? 5));\n    }\n    particleInit(container, particle) {\n        const star = particle.shapeData, inset = getRangeValue(star?.inset ?? 2);\n        particle.starInset = inset;\n    }\n}\n"],"mappings":"AAAA,SAASA,aAAa,QAAQ,oBAAoB;AAClD,OAAO,MAAMC,UAAU,CAAC;EACpBC,IAAIA,CAACC,OAAO,EAAEC,QAAQ,EAAEC,MAAM,EAAE;IAAA,IAAAC,mBAAA;IAC5B,MAAMC,KAAK,GAAGH,QAAQ,CAACG,KAAK;MAAEC,KAAK,IAAAF,mBAAA,GAAGF,QAAQ,CAACK,SAAS,cAAAH,mBAAA,cAAAA,mBAAA,GAAI,CAAC;IAC7DH,OAAO,CAACO,MAAM,CAAC,CAAC,EAAE,CAAC,GAAGL,MAAM,CAAC;IAC7B,KAAK,IAAIM,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,KAAK,EAAEI,CAAC,EAAE,EAAE;MAC5BR,OAAO,CAACS,MAAM,CAACC,IAAI,CAACC,EAAE,GAAGP,KAAK,CAAC;MAC/BJ,OAAO,CAACY,MAAM,CAAC,CAAC,EAAE,CAAC,GAAGV,MAAM,GAAGG,KAAK,CAAC;MACrCL,OAAO,CAACS,MAAM,CAACC,IAAI,CAACC,EAAE,GAAGP,KAAK,CAAC;MAC/BJ,OAAO,CAACY,MAAM,CAAC,CAAC,EAAE,CAAC,GAAGV,MAAM,CAAC;IACjC;EACJ;EACAW,aAAaA,CAACZ,QAAQ,EAAE;IAAA,IAAAa,IAAA,EAAAC,WAAA;IACpB,MAAMC,IAAI,GAAGf,QAAQ,CAACgB,SAAS;IAC/B,OAAOP,IAAI,CAACQ,KAAK,CAACrB,aAAa,EAAAiB,IAAA,IAAAC,WAAA,GAACC,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEZ,KAAK,cAAAW,WAAA,cAAAA,WAAA,GAAIC,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEG,QAAQ,cAAAL,IAAA,cAAAA,IAAA,GAAI,CAAC,CAAC,CAAC;EACxE;EACAM,YAAYA,CAACC,SAAS,EAAEpB,QAAQ,EAAE;IAAA,IAAAqB,WAAA;IAC9B,MAAMN,IAAI,GAAGf,QAAQ,CAACgB,SAAS;MAAEZ,KAAK,GAAGR,aAAa,EAAAyB,WAAA,GAACN,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEX,KAAK,cAAAiB,WAAA,cAAAA,WAAA,GAAI,CAAC,CAAC;IACxErB,QAAQ,CAACK,SAAS,GAAGD,KAAK;EAC9B;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}