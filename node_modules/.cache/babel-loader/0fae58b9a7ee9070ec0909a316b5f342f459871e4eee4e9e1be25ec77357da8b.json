{"ast":null,"code":"import { randomInRange } from \"tsparticles-engine\";\nfunction updateColorValue(delta, colorValue, valueAnimation, max, decrease) {\n  var _colorValue$maxLoops, _colorValue$loops, _colorValue$maxLoops2, _colorValue$delayTime, _colorValue$delayTime2, _colorValue$delayTime3, _colorValue$delayTime4, _colorValue$velocity, _colorValue$decay;\n  if (!colorValue || !valueAnimation.enable || ((_colorValue$maxLoops = colorValue.maxLoops) !== null && _colorValue$maxLoops !== void 0 ? _colorValue$maxLoops : 0) > 0 && ((_colorValue$loops = colorValue.loops) !== null && _colorValue$loops !== void 0 ? _colorValue$loops : 0) > ((_colorValue$maxLoops2 = colorValue.maxLoops) !== null && _colorValue$maxLoops2 !== void 0 ? _colorValue$maxLoops2 : 0)) {\n    return;\n  }\n  if (!colorValue.time) {\n    colorValue.time = 0;\n  }\n  if (((_colorValue$delayTime = colorValue.delayTime) !== null && _colorValue$delayTime !== void 0 ? _colorValue$delayTime : 0) > 0 && colorValue.time < ((_colorValue$delayTime2 = colorValue.delayTime) !== null && _colorValue$delayTime2 !== void 0 ? _colorValue$delayTime2 : 0)) {\n    colorValue.time += delta.value;\n  }\n  if (((_colorValue$delayTime3 = colorValue.delayTime) !== null && _colorValue$delayTime3 !== void 0 ? _colorValue$delayTime3 : 0) > 0 && colorValue.time < ((_colorValue$delayTime4 = colorValue.delayTime) !== null && _colorValue$delayTime4 !== void 0 ? _colorValue$delayTime4 : 0)) {\n    return;\n  }\n  const offset = randomInRange(valueAnimation.offset),\n    velocity = ((_colorValue$velocity = colorValue.velocity) !== null && _colorValue$velocity !== void 0 ? _colorValue$velocity : 0) * delta.factor + offset * 3.6,\n    decay = (_colorValue$decay = colorValue.decay) !== null && _colorValue$decay !== void 0 ? _colorValue$decay : 1;\n  if (!decrease || colorValue.status === \"increasing\") {\n    colorValue.value += velocity;\n    if (colorValue.value > max) {\n      if (!colorValue.loops) {\n        colorValue.loops = 0;\n      }\n      colorValue.loops++;\n      if (decrease) {\n        colorValue.status = \"decreasing\";\n        colorValue.value -= colorValue.value % max;\n      }\n    }\n  } else {\n    colorValue.value -= velocity;\n    if (colorValue.value < 0) {\n      if (!colorValue.loops) {\n        colorValue.loops = 0;\n      }\n      colorValue.loops++;\n      colorValue.status = \"increasing\";\n      colorValue.value += colorValue.value;\n    }\n  }\n  if (colorValue.velocity && decay !== 1) {\n    colorValue.velocity *= decay;\n  }\n  if (colorValue.value > max) {\n    colorValue.value %= max;\n  }\n}\nexport function updateColor(particle, delta) {\n  const {\n      h: hAnimation,\n      s: sAnimation,\n      l: lAnimation\n    } = particle.options.color.animation,\n    {\n      color\n    } = particle;\n  if (!color) {\n    return;\n  }\n  const {\n    h,\n    s,\n    l\n  } = color;\n  if (h) {\n    updateColorValue(delta, h, hAnimation, 360, false);\n  }\n  if (s) {\n    updateColorValue(delta, s, sAnimation, 100, true);\n  }\n  if (l) {\n    updateColorValue(delta, l, lAnimation, 100, true);\n  }\n}","map":{"version":3,"names":["randomInRange","updateColorValue","delta","colorValue","valueAnimation","max","decrease","_colorValue$maxLoops","_colorValue$loops","_colorValue$maxLoops2","_colorValue$delayTime","_colorValue$delayTime2","_colorValue$delayTime3","_colorValue$delayTime4","_colorValue$velocity","_colorValue$decay","enable","maxLoops","loops","time","delayTime","value","offset","velocity","factor","decay","status","updateColor","particle","h","hAnimation","s","sAnimation","l","lAnimation","options","color","animation"],"sources":["C:/Users/Sutirtha Choudhury/OneDrive/Desktop/Portfolio/my-port-folio/node_modules/tsparticles-updater-color/esm/Utils.js"],"sourcesContent":["import { randomInRange, } from \"tsparticles-engine\";\nfunction updateColorValue(delta, colorValue, valueAnimation, max, decrease) {\n    if (!colorValue ||\n        !valueAnimation.enable ||\n        ((colorValue.maxLoops ?? 0) > 0 && (colorValue.loops ?? 0) > (colorValue.maxLoops ?? 0))) {\n        return;\n    }\n    if (!colorValue.time) {\n        colorValue.time = 0;\n    }\n    if ((colorValue.delayTime ?? 0) > 0 && colorValue.time < (colorValue.delayTime ?? 0)) {\n        colorValue.time += delta.value;\n    }\n    if ((colorValue.delayTime ?? 0) > 0 && colorValue.time < (colorValue.delayTime ?? 0)) {\n        return;\n    }\n    const offset = randomInRange(valueAnimation.offset), velocity = (colorValue.velocity ?? 0) * delta.factor + offset * 3.6, decay = colorValue.decay ?? 1;\n    if (!decrease || colorValue.status === \"increasing\") {\n        colorValue.value += velocity;\n        if (colorValue.value > max) {\n            if (!colorValue.loops) {\n                colorValue.loops = 0;\n            }\n            colorValue.loops++;\n            if (decrease) {\n                colorValue.status = \"decreasing\";\n                colorValue.value -= colorValue.value % max;\n            }\n        }\n    }\n    else {\n        colorValue.value -= velocity;\n        if (colorValue.value < 0) {\n            if (!colorValue.loops) {\n                colorValue.loops = 0;\n            }\n            colorValue.loops++;\n            colorValue.status = \"increasing\";\n            colorValue.value += colorValue.value;\n        }\n    }\n    if (colorValue.velocity && decay !== 1) {\n        colorValue.velocity *= decay;\n    }\n    if (colorValue.value > max) {\n        colorValue.value %= max;\n    }\n}\nexport function updateColor(particle, delta) {\n    const { h: hAnimation, s: sAnimation, l: lAnimation } = particle.options.color.animation, { color } = particle;\n    if (!color) {\n        return;\n    }\n    const { h, s, l } = color;\n    if (h) {\n        updateColorValue(delta, h, hAnimation, 360, false);\n    }\n    if (s) {\n        updateColorValue(delta, s, sAnimation, 100, true);\n    }\n    if (l) {\n        updateColorValue(delta, l, lAnimation, 100, true);\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}