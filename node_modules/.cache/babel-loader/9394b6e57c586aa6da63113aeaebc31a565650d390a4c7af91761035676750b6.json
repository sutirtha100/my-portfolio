{"ast":null,"code":"import { tsParticles } from \"tsparticles-engine\";\nexport class Particles {\n  static init(options) {\n    var _options$color, _options$minDistance, _options$connectParti, _options$speed, _options$maxParticles, _options$sizeVariatio, _options$responsive;\n    const particles = new Particles(),\n      selector = options.selector;\n    if (!selector) {\n      throw new Error(\"No selector provided\");\n    }\n    const el = document.querySelector(selector);\n    if (!el) {\n      throw new Error(\"No element found for selector\");\n    }\n    tsParticles.set(selector.replace(\".\", \"\").replace(\"!\", \"\"), el, {\n      fullScreen: {\n        enable: false\n      },\n      particles: {\n        color: {\n          value: (_options$color = options.color) !== null && _options$color !== void 0 ? _options$color : \"!000000\"\n        },\n        links: {\n          color: \"random\",\n          distance: (_options$minDistance = options.minDistance) !== null && _options$minDistance !== void 0 ? _options$minDistance : 120,\n          enable: (_options$connectParti = options.connectParticles) !== null && _options$connectParti !== void 0 ? _options$connectParti : false\n        },\n        move: {\n          enable: true,\n          speed: (_options$speed = options.speed) !== null && _options$speed !== void 0 ? _options$speed : 0.5\n        },\n        number: {\n          value: (_options$maxParticles = options.maxParticles) !== null && _options$maxParticles !== void 0 ? _options$maxParticles : 100\n        },\n        size: {\n          value: {\n            min: 1,\n            max: (_options$sizeVariatio = options.sizeVariations) !== null && _options$sizeVariatio !== void 0 ? _options$sizeVariatio : 3\n          }\n        }\n      },\n      responsive: (_options$responsive = options.responsive) === null || _options$responsive === void 0 ? void 0 : _options$responsive.map(responsive => {\n        var _responsive$options, _responsive$options2, _responsive$options3, _responsive$options4, _responsive$options5;\n        return {\n          maxWidth: responsive.breakpoint,\n          options: {\n            particles: {\n              color: {\n                value: (_responsive$options = responsive.options) === null || _responsive$options === void 0 ? void 0 : _responsive$options.color\n              },\n              links: {\n                distance: (_responsive$options2 = responsive.options) === null || _responsive$options2 === void 0 ? void 0 : _responsive$options2.minDistance,\n                enable: (_responsive$options3 = responsive.options) === null || _responsive$options3 === void 0 ? void 0 : _responsive$options3.connectParticles\n              },\n              number: {\n                value: options.maxParticles\n              },\n              move: {\n                enable: true,\n                speed: (_responsive$options4 = responsive.options) === null || _responsive$options4 === void 0 ? void 0 : _responsive$options4.speed\n              },\n              size: {\n                value: (_responsive$options5 = responsive.options) === null || _responsive$options5 === void 0 ? void 0 : _responsive$options5.sizeVariations\n              }\n            }\n          }\n        };\n      })\n    }).then(container => {\n      particles._container = container;\n    });\n    return particles;\n  }\n  destroy() {\n    const container = this._container;\n    container && container.destroy();\n  }\n  pauseAnimation() {\n    const container = this._container;\n    container && container.pause();\n  }\n  resumeAnimation() {\n    const container = this._container;\n    container && container.play();\n  }\n}","map":{"version":3,"names":["tsParticles","Particles","init","options","_options$color","_options$minDistance","_options$connectParti","_options$speed","_options$maxParticles","_options$sizeVariatio","_options$responsive","particles","selector","Error","el","document","querySelector","set","replace","fullScreen","enable","color","value","links","distance","minDistance","connectParticles","move","speed","number","maxParticles","size","min","max","sizeVariations","responsive","map","_responsive$options","_responsive$options2","_responsive$options3","_responsive$options4","_responsive$options5","maxWidth","breakpoint","then","container","_container","destroy","pauseAnimation","pause","resumeAnimation","play"],"sources":["C:/Users/Sutirtha Choudhury/OneDrive/Desktop/Portfolio/my-port-folio/node_modules/tsparticles-particles.js/esm/marcbruederlin/Particles.js"],"sourcesContent":["import { tsParticles } from \"tsparticles-engine\";\nexport class Particles {\n    static init(options) {\n        const particles = new Particles(), selector = options.selector;\n        if (!selector) {\n            throw new Error(\"No selector provided\");\n        }\n        const el = document.querySelector(selector);\n        if (!el) {\n            throw new Error(\"No element found for selector\");\n        }\n        tsParticles\n            .set(selector.replace(\".\", \"\").replace(\"!\", \"\"), el, {\n            fullScreen: {\n                enable: false,\n            },\n            particles: {\n                color: {\n                    value: options.color ?? \"!000000\",\n                },\n                links: {\n                    color: \"random\",\n                    distance: options.minDistance ?? 120,\n                    enable: options.connectParticles ?? false,\n                },\n                move: {\n                    enable: true,\n                    speed: options.speed ?? 0.5,\n                },\n                number: {\n                    value: options.maxParticles ?? 100,\n                },\n                size: {\n                    value: { min: 1, max: options.sizeVariations ?? 3 },\n                },\n            },\n            responsive: options.responsive?.map((responsive) => ({\n                maxWidth: responsive.breakpoint,\n                options: {\n                    particles: {\n                        color: {\n                            value: responsive.options?.color,\n                        },\n                        links: {\n                            distance: responsive.options?.minDistance,\n                            enable: responsive.options?.connectParticles,\n                        },\n                        number: {\n                            value: options.maxParticles,\n                        },\n                        move: {\n                            enable: true,\n                            speed: responsive.options?.speed,\n                        },\n                        size: {\n                            value: responsive.options?.sizeVariations,\n                        },\n                    },\n                },\n            })),\n        })\n            .then((container) => {\n            particles._container = container;\n        });\n        return particles;\n    }\n    destroy() {\n        const container = this._container;\n        container && container.destroy();\n    }\n    pauseAnimation() {\n        const container = this._container;\n        container && container.pause();\n    }\n    resumeAnimation() {\n        const container = this._container;\n        container && container.play();\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}