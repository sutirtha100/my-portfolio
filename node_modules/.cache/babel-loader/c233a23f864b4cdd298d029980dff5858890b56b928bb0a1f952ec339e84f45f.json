{"ast":null,"code":"import { getRangeValue, parseAlpha } from \"./NumberUtils\";\nimport { hslToRgb, hslaToRgba } from \"./ColorUtils\";\nexport class HslColorManager {\n  constructor() {\n    this.key = \"hsl\";\n    this.stringPrefix = \"hsl\";\n  }\n  handleColor(color) {\n    var _colorValue$hsl;\n    const colorValue = color.value,\n      hslColor = (_colorValue$hsl = colorValue.hsl) !== null && _colorValue$hsl !== void 0 ? _colorValue$hsl : color.value;\n    if (hslColor.h !== undefined && hslColor.s !== undefined && hslColor.l !== undefined) {\n      return hslToRgb(hslColor);\n    }\n  }\n  handleRangeColor(color) {\n    var _colorValue$hsl2;\n    const colorValue = color.value,\n      hslColor = (_colorValue$hsl2 = colorValue.hsl) !== null && _colorValue$hsl2 !== void 0 ? _colorValue$hsl2 : color.value;\n    if (hslColor.h !== undefined && hslColor.l !== undefined) {\n      return hslToRgb({\n        h: getRangeValue(hslColor.h),\n        l: getRangeValue(hslColor.l),\n        s: getRangeValue(hslColor.s)\n      });\n    }\n  }\n  parseString(input) {\n    if (!input.startsWith(\"hsl\")) {\n      return;\n    }\n    const regex = /hsla?\\(\\s*(\\d+)\\s*,\\s*(\\d+)%\\s*,\\s*(\\d+)%\\s*(,\\s*([\\d.%]+)\\s*)?\\)/i,\n      result = regex.exec(input);\n    return result ? hslaToRgba({\n      a: result.length > 4 ? parseAlpha(result[5]) : 1,\n      h: parseInt(result[1], 10),\n      l: parseInt(result[3], 10),\n      s: parseInt(result[2], 10)\n    }) : undefined;\n  }\n}","map":{"version":3,"names":["getRangeValue","parseAlpha","hslToRgb","hslaToRgba","HslColorManager","constructor","key","stringPrefix","handleColor","color","_colorValue$hsl","colorValue","value","hslColor","hsl","h","undefined","s","l","handleRangeColor","_colorValue$hsl2","parseString","input","startsWith","regex","result","exec","a","length","parseInt"],"sources":["C:/Users/Sutirtha Choudhury/OneDrive/Desktop/Portfolio/my-port-folio/node_modules/tsparticles-engine/esm/Utils/HslColorManager.js"],"sourcesContent":["import { getRangeValue, parseAlpha } from \"./NumberUtils\";\nimport { hslToRgb, hslaToRgba } from \"./ColorUtils\";\nexport class HslColorManager {\n    constructor() {\n        this.key = \"hsl\";\n        this.stringPrefix = \"hsl\";\n    }\n    handleColor(color) {\n        const colorValue = color.value, hslColor = colorValue.hsl ?? color.value;\n        if (hslColor.h !== undefined && hslColor.s !== undefined && hslColor.l !== undefined) {\n            return hslToRgb(hslColor);\n        }\n    }\n    handleRangeColor(color) {\n        const colorValue = color.value, hslColor = colorValue.hsl ?? color.value;\n        if (hslColor.h !== undefined && hslColor.l !== undefined) {\n            return hslToRgb({\n                h: getRangeValue(hslColor.h),\n                l: getRangeValue(hslColor.l),\n                s: getRangeValue(hslColor.s),\n            });\n        }\n    }\n    parseString(input) {\n        if (!input.startsWith(\"hsl\")) {\n            return;\n        }\n        const regex = /hsla?\\(\\s*(\\d+)\\s*,\\s*(\\d+)%\\s*,\\s*(\\d+)%\\s*(,\\s*([\\d.%]+)\\s*)?\\)/i, result = regex.exec(input);\n        return result\n            ? hslaToRgba({\n                a: result.length > 4 ? parseAlpha(result[5]) : 1,\n                h: parseInt(result[1], 10),\n                l: parseInt(result[3], 10),\n                s: parseInt(result[2], 10),\n            })\n            : undefined;\n    }\n}\n"],"mappings":"AAAA,SAASA,aAAa,EAAEC,UAAU,QAAQ,eAAe;AACzD,SAASC,QAAQ,EAAEC,UAAU,QAAQ,cAAc;AACnD,OAAO,MAAMC,eAAe,CAAC;EACzBC,WAAWA,CAAA,EAAG;IACV,IAAI,CAACC,GAAG,GAAG,KAAK;IAChB,IAAI,CAACC,YAAY,GAAG,KAAK;EAC7B;EACAC,WAAWA,CAACC,KAAK,EAAE;IAAA,IAAAC,eAAA;IACf,MAAMC,UAAU,GAAGF,KAAK,CAACG,KAAK;MAAEC,QAAQ,IAAAH,eAAA,GAAGC,UAAU,CAACG,GAAG,cAAAJ,eAAA,cAAAA,eAAA,GAAID,KAAK,CAACG,KAAK;IACxE,IAAIC,QAAQ,CAACE,CAAC,KAAKC,SAAS,IAAIH,QAAQ,CAACI,CAAC,KAAKD,SAAS,IAAIH,QAAQ,CAACK,CAAC,KAAKF,SAAS,EAAE;MAClF,OAAOd,QAAQ,CAACW,QAAQ,CAAC;IAC7B;EACJ;EACAM,gBAAgBA,CAACV,KAAK,EAAE;IAAA,IAAAW,gBAAA;IACpB,MAAMT,UAAU,GAAGF,KAAK,CAACG,KAAK;MAAEC,QAAQ,IAAAO,gBAAA,GAAGT,UAAU,CAACG,GAAG,cAAAM,gBAAA,cAAAA,gBAAA,GAAIX,KAAK,CAACG,KAAK;IACxE,IAAIC,QAAQ,CAACE,CAAC,KAAKC,SAAS,IAAIH,QAAQ,CAACK,CAAC,KAAKF,SAAS,EAAE;MACtD,OAAOd,QAAQ,CAAC;QACZa,CAAC,EAAEf,aAAa,CAACa,QAAQ,CAACE,CAAC,CAAC;QAC5BG,CAAC,EAAElB,aAAa,CAACa,QAAQ,CAACK,CAAC,CAAC;QAC5BD,CAAC,EAAEjB,aAAa,CAACa,QAAQ,CAACI,CAAC;MAC/B,CAAC,CAAC;IACN;EACJ;EACAI,WAAWA,CAACC,KAAK,EAAE;IACf,IAAI,CAACA,KAAK,CAACC,UAAU,CAAC,KAAK,CAAC,EAAE;MAC1B;IACJ;IACA,MAAMC,KAAK,GAAG,oEAAoE;MAAEC,MAAM,GAAGD,KAAK,CAACE,IAAI,CAACJ,KAAK,CAAC;IAC9G,OAAOG,MAAM,GACPtB,UAAU,CAAC;MACTwB,CAAC,EAAEF,MAAM,CAACG,MAAM,GAAG,CAAC,GAAG3B,UAAU,CAACwB,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;MAChDV,CAAC,EAAEc,QAAQ,CAACJ,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;MAC1BP,CAAC,EAAEW,QAAQ,CAACJ,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;MAC1BR,CAAC,EAAEY,QAAQ,CAACJ,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE;IAC7B,CAAC,CAAC,GACAT,SAAS;EACnB;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}